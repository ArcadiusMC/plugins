name = "leaderboards"
aliases = 'lb'
description = "Leaderboards admin command"

literal("reload-config") {
  executes = reloadConfig()
  description = "Reloads the Leaderboards Config"
}

literal("reload-boards") {
  executes = reloadBoards()
  description = "Reloads all leaderboards from disc"
}

literal("save") {
  executes = saveBoards()
  description = "Saves all leaderboards to disk"
}

literal("create").argument("name", rkey) {
  executes = createBoard()
  description = "Creates a new leaderboard with 'dummy' source"
}

literal("remove").argument("board" @lb) {
  executes = removeBoard()
  description = "Kills and deletes a leaderboard"
}

literal("copy").argument("board" @lb).literal("from").argument("source" @lb) {
  executes = copyBoard()

  description = [
    "Copies data from one leaderboard to another",
    "List of elements copied from the first board to the second:",
    "- `format`",
    "- `you format`",
    "- `header`",
    "- `footer`",
    "- `include-you`",
    "- `max-size`",
    "- `fill-empty`",
    "- `scale`",
    "- `translation`",
    "- `brightness`",
    "- `billboard`",
    "- `text-alignment`",
    "- `background-color`",
    "- `text-shadow`",
    "- `see-through`",
    "- `line-width`",
    "- `opacity`"
  ]
}

literal("footer").argument("board" @lb).argument("text", greedy_string) {
  executes = setFooter()
  suggests = suggestFooter()
  description = "Sets the footer used by a leaderboard"
}

literal("header").argument("board" @lb).argument("text", greedy_string) {
  executes = setHeader()
  suggests = suggestHeader()
  description = "Sets the header (title) used by a leaderboard"
}

literal("format").argument("board" @lb).argument("text", greedy_string) {
  executes = setFormat()
  suggests = suggestFormat()
  description = "Sets the format used by a leaderboard"
}

literal("empty-format") {
  literal("set").argument("board" @lb).argument("text", greedy_string) {
    executes = setEmptyFormat()
    description = [
      "Overrides the format used for displaying entries that",
      "are empty, only used in when 'fill-empty' is set to 'true'"
    ]
  }
  literal("unset").argument("board" @lb) {
    executes = setEmptyFormat()
    description = [
      "Revers the format used for displaying empty entries",
      "back to the regular format."
    ]
  }
}

literal("you-format") {
  literal("set").argument("board" @lb).argument("text", greedy_string) {
    executes = setYouFormat()
    description = "Sets the format used when displaying the 'You' entry"
  }
  literal("unset").argument("board" @lb) {
    executes = setYouFormat()
    description = [
      "Reverts the format used for displaying the 'You' entry",
      "back to the regular format"
    ]
  }
}

literal("include-you").argument("board" @lb).argument("value", bool) {
  executes = setIncludeYou()
  description = [
    "Enables/Disables the 'You' entry being displayed",
    "",
    "The 'You' entry will not be shown if a non-player leaderboard",
    "is being rendered, or if the player has no score in the leaderboard"
  ]
}

literal("order").argument("board" @lb).argument("order", @order) {
  executes = setOrder()
  description = "Sets the order in which elements are listed"
}

literal("source").argument("board" @lb).argument("source", @source) {
  executes = setSource()
  description = "Sets the data source used by a leaderboard"
}

literal("max-size").argument("board" @lb).argument("size", int(min=1, max=50)) {
  executes = setMaxSize()
  description = "Sets the maximum amount of entries a leaderboard will show"
}

literal("fill-empty").argument("board" @lb).argument("value", bool) {
  executes = setFillEmpty()
  description = [
    "Sets whether the leaderboard size is changed or if empty",
    "slots are filled with '-' values"
  ]
}

literal("filter") {
  literal("set").argument("board" @lb).argument("filter", @filter) {
    executes = setFilter()
    description = "Sets a leaderboard's score filter"
  }
  literal("unset").argument("board" @lb) {
    executes = setFilter()
    description = "Removes a leaderboard's filter"
  }
}

#paste(generic.gcn)