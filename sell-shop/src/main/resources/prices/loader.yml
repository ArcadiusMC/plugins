#
# Controls what price files are loaded and for what purpose.
# Any price files loaded are accessible in the sellshop pages
# like so:
# - slot: 1,1
#   sell: <price map name>:<material>
#
# Example:
# - slot: 1,1
#   sell: example:quartz
#
# -------------------------------------------------------------------
# JSON price files format
# -------------------------------------------------------------------
# Price files are JSON array files, where each element in the array
# is a price entry.
#
# Entry values:
# - material (Required):
#     Material, eg: "minecraft:stone"
#
# - price (Required):
#     Base price of the material
#
# - compact-material (Optional):
#     Material used when the "material"
#     compacts
#
# - compact-multiplier (Optional, unless 'compact-material' has been set):
#     Specifies the base price multiplier
#     for the compact material
#
# - max-earnings (Optional, defaults to the value specified in the plugin config):
#     Specifies the maximum amount that can
#     be earned from the material
#
#
# See example.json for an example file.
#

#
# Example entry explaining formatting options
#
# Values:
# - sources (Required):
#     Array of file names that contain price data for
#     materials. This file is relative to this loader's
#     directory. (File type not needed)
#
#     All files loaded under this entry are accessible with the
#     entry's key, so in this example's case, all materials loaded
#     can be accessed like so: "example:<material name>",
#     Without the < > (Why the fuck do I have to specify that)
#
# - global (Optional, defaults to false):
#     Determines if the prices specified in this entry
#     are used globally. This means (most of the time)
#     That the prices in the file are used in the generic
#     /shop, accessible to all, and when calculating
#     earnings from auto sold items.
#
example:
  sources: ["filename"]
  global: true
